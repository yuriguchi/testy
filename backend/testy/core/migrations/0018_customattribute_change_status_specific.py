# Generated by Django 4.2.13 on 2024-07-28 15:52

from django.db import migrations, transaction

from testy.tests_representation.choices import TestStatuses, ResultStatusType


@transaction.atomic
def change_status_specific_choices_to_pk(apps, schema_editor):
    custom_attribute_model = apps.get_model('core', 'Customattribute')
    result_status_model = apps.get_model('tests_representation', 'ResultStatus')
    to_update_custom_attribute = []

    for custom_attribute in custom_attribute_model.objects.all():
        new_status_specific = []
        for status in custom_attribute.status_specific:
            if status in TestStatuses.values:
                status_label = TestStatuses(status).label
                if new_status := result_status_model.objects.filter(
                        name__iexact=status_label, type=ResultStatusType.SYSTEM).first():
                    new_status_specific.append(new_status.pk)
        custom_attribute.status_specific_temp = new_status_specific
        to_update_custom_attribute.append(custom_attribute)

    custom_attribute_model.objects.bulk_update(to_update_custom_attribute, ['status_specific_temp'])


@transaction.atomic
def rollback_status_specific_choices_to_pk(apps, schema_editor):
    custom_attribute_model = apps.get_model('core', 'Customattribute')
    result_status_model = apps.get_model('tests_representation', 'ResultStatus')
    to_update_custom_attribute = []
    labels = {label.lower(): value for value, label in TestStatuses.choices}

    for custom_attribute in custom_attribute_model.objects.all():
        new_status_specific = []
        for status_id in custom_attribute.status_specific_temp:
            if status := result_status_model.objects.filter(pk=status_id, type=ResultStatusType.SYSTEM).first():
                if status.name.lower() in labels:
                    new_status_specific.append(labels[status.name.lower()])
        custom_attribute.status_specific = new_status_specific
        to_update_custom_attribute.append(custom_attribute)

    custom_attribute_model.objects.bulk_update(to_update_custom_attribute, ['status_specific'])


class Migration(migrations.Migration):
    dependencies = [
        ('core', '0017_customattribute_status_specific_temp_and_more'),
    ]

    operations = [
        migrations.RunPython(
            change_status_specific_choices_to_pk,
            rollback_status_specific_choices_to_pk,
        )
    ]
