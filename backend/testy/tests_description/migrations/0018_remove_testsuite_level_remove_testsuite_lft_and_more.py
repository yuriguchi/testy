# Generated by Django 4.2.13 on 2024-07-05 06:49

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
import testy.root.ltree.fields
from testy.root.ltree.migration_sql import create_initial_path


class Migration(migrations.Migration):
    dependencies = [
        ('tests_description', '0017_make_mptt_field_nullable_and_assign_default_value'),
        ('testy', '0002_added_ltree')
    ]

    operations = [
        migrations.RemoveField(
            model_name='testsuite',
            name='level',
        ),
        migrations.RemoveField(
            model_name='testsuite',
            name='lft',
        ),
        migrations.RemoveField(
            model_name='testsuite',
            name='rght',
        ),
        migrations.AddField(
            model_name='testsuite',
            name='path',
            field=testy.root.ltree.fields.LtreeField(db_index=True, default=None, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='testsuite',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='child_test_suites', to='tests_description.testsuite'),
        ),
        migrations.RemoveField('testsuite', 'tree_id'),
        migrations.AddField(
            model_name='testsuite',
            name='tree_id',
            field=models.PositiveIntegerField(blank=True, db_index=True, editable=False, null=True),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testsuite',
            trigger=pgtrigger.compiler.Trigger(name='suite_insert_trg', sql=pgtrigger.compiler.UpsertTriggerSql(
                func='IF NEW.parent_id IS NULL THEN     NEW.path = NEW.id::text::ltree;     NEW.tree_id = NEW.id; ELSE     SELECT path || NEW.id::text, tree_id FROM tests_description_testsuite     WHERE id = NEW.parent_id INTO NEW.path, NEW.tree_id; END IF; RETURN NEW;',
                hash='08cbb3b860de53d6bf74738552605a92aff2a35a', operation='INSERT',
                pgid='pgtrigger_suite_insert_trg_8f3bd', table='tests_description_testsuite', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testsuite',
            trigger=pgtrigger.compiler.Trigger(name='suite_path_change_trg', sql=pgtrigger.compiler.UpsertTriggerSql(
                condition='WHEN (OLD."parent_id" IS DISTINCT FROM (NEW."parent_id"))',
                func='IF NEW.parent_id IS NULL THEN     NEW.path = NEW.id::text::ltree;     NEW.tree_id = NEW.id; ELSE     SELECT path || NEW.id::text, tree_id FROM tests_description_testsuite     WHERE id = NEW.parent_id INTO NEW.path, NEW.tree_id; END IF; RETURN NEW;',
                hash='0888bfd94472479d05b61eb37462e4f027bacaaa', operation='UPDATE',
                pgid='pgtrigger_suite_path_change_trg_f2661', table='tests_description_testsuite', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testsuite',
            trigger=pgtrigger.compiler.Trigger(name='suite_path_descendants_trg',
                                               sql=pgtrigger.compiler.UpsertTriggerSql(
                                                   condition='WHEN (OLD."path" IS DISTINCT FROM (NEW."path"))',
                                                   func='UPDATE tests_description_testsuite SET path = NEW.path || subpath(path, nlevel(OLD.path)),     tree_id = NEW.tree_id WHERE path <@ OLD.path AND id != NEW.id AND tree_id = OLD.tree_id; RETURN NEW;',
                                                   hash='afeca304109571c0b2a8a59b4ed463f832096159', operation='UPDATE',
                                                   pgid='pgtrigger_suite_path_descendants_trg_8cc24',
                                                   table='tests_description_testsuite', when='AFTER')),
        ),
        migrations.RunSQL(
            create_initial_path.format(table_name='tests_description_testsuite'),
            reverse_sql='',
        ),
        migrations.AddIndex(
            model_name='testsuite',
            index=django.contrib.postgres.indexes.GistIndex(models.F('path'), name='suitegist_path_idx'),
        ),
    ]
