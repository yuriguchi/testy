# Generated by Django 4.2.13 on 2024-11-14 15:53

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('tests_description', '0019_testcase_cases_count_increment_statistics_on_insert_and_more'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='testcase',
            name='cases_count_increment_statistics_on_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='testsuite',
            name='suite_path_descendants_trg',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='testsuite',
            name='suites_count_increment_statistics_on_insert',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testcase',
            trigger=pgtrigger.compiler.Trigger(name='cases_count_increment_statistics_on_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func=' \n            UPDATE core_projectstatistics \n            SET cases_count = cases_count + 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='7eea6cb3d79e63dc513d061cc7e6e03572245579', operation='INSERT', pgid='pgtrigger_cases_count_increment_statistics_on_insert_40b29', table='tests_description_testcase', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testsuite',
            trigger=pgtrigger.compiler.Trigger(name='suite_path_descendants_trg', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (not("new"."path" operator("public".=) "old"."path") and (coalesce("new"."path", "old"."path") is not null))', func='UPDATE tests_description_testsuite SET path = NEW.path || subpath(path, nlevel(OLD.path)),     tree_id = NEW.tree_id WHERE path <@ OLD.path AND id != NEW.id AND tree_id = OLD.tree_id; RETURN NEW;', hash='86cee7212288399cf556b2eeda1572bd91535a9e', operation='UPDATE', pgid='pgtrigger_suite_path_descendants_trg_8cc24', table='tests_description_testsuite', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testsuite',
            trigger=pgtrigger.compiler.Trigger(name='suites_count_increment_statistics_on_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func=' \n            UPDATE core_projectstatistics \n            SET suites_count = suites_count + 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='d4e90ae66505c22f5c22c7a874f96a9427a90a18', operation='INSERT', pgid='pgtrigger_suites_count_increment_statistics_on_insert_e98cb', table='tests_description_testsuite', when='BEFORE')),
        ),
    ]
