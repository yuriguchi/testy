# Generated by Django 4.2.13 on 2024-10-24 18:22

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('tests_representation', '0032_historicaltest_last_status_test_last_status'),
    ]

    operations = [
        pgtrigger.migrations.AddTrigger(
            model_name='test',
            trigger=pgtrigger.compiler.Trigger(name='tests_count_increment_statistics_on_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n            UPDATE core_projectstatistics \n            SET tests_count = tests_count + 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='cff0cd5ed5b85fc3dc53316f21bbf58f68b25f88', operation='INSERT', pgid='pgtrigger_tests_count_increment_statistics_on_insert_3d543', table='tests_representation_test', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='test',
            trigger=pgtrigger.compiler.Trigger(name='tests_count_decrement_statistics_on_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN ((NEW."is_deleted" AND NOT OLD."is_deleted") OR (NEW."is_archive" AND NOT OLD."is_archive"))', func='\n            UPDATE core_projectstatistics \n            SET tests_count = tests_count - 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='ebb219d579e9d2ab6ff59dedacb243c83ad9df39', operation='UPDATE', pgid='pgtrigger_tests_count_decrement_statistics_on_update_802f6', table='tests_representation_test', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='test',
            trigger=pgtrigger.compiler.Trigger(name='tests_count_increment_statistics_on_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN ((NOT NEW."is_deleted" AND OLD."is_deleted") OR (NOT NEW."is_archive" AND OLD."is_archive"))', func='\n            UPDATE core_projectstatistics \n            SET tests_count = tests_count + 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='06ec374305823b5609f347f028e8c54ebef8103b', operation='UPDATE', pgid='pgtrigger_tests_count_increment_statistics_on_update_804b1', table='tests_representation_test', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='test',
            trigger=pgtrigger.compiler.Trigger(name='tests_count_decrement_statistics_on_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n            UPDATE core_projectstatistics \n            SET tests_count = tests_count - 1 \n            WHERE project_id = OLD.project_id;\n            RETURN OLD;\n            ', hash='115e46733900fce92dd1cc24a0c21eeef5766118', operation='DELETE', pgid='pgtrigger_tests_count_decrement_statistics_on_delete_1c9f2', table='tests_representation_test', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testplan',
            trigger=pgtrigger.compiler.Trigger(name='plans_count_increment_statistics_on_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n            UPDATE core_projectstatistics \n            SET plans_count = plans_count + 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='4c5840ed45755af0c9d0e0cea7a934363c95b2c0', operation='INSERT', pgid='pgtrigger_plans_count_increment_statistics_on_insert_53e1a', table='tests_representation_testplan', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testplan',
            trigger=pgtrigger.compiler.Trigger(name='plans_count_decrement_statistics_on_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN ((NEW."is_deleted" AND NOT OLD."is_deleted") OR (NEW."is_archive" AND NOT OLD."is_archive"))', func='\n            UPDATE core_projectstatistics \n            SET plans_count = plans_count - 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='99332552a5ddc6e8d140286004bce299ebfb5ce1', operation='UPDATE', pgid='pgtrigger_plans_count_decrement_statistics_on_update_60350', table='tests_representation_testplan', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testplan',
            trigger=pgtrigger.compiler.Trigger(name='plans_count_increment_statistics_on_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN ((NOT NEW."is_deleted" AND OLD."is_deleted") OR (NOT NEW."is_archive" AND OLD."is_archive"))', func='\n            UPDATE core_projectstatistics \n            SET plans_count = plans_count + 1 \n            WHERE project_id = NEW.project_id;\n            RETURN NEW;\n            ', hash='fc6a410e099354b94fee27370b739474d72dad8c', operation='UPDATE', pgid='pgtrigger_plans_count_increment_statistics_on_update_eb93a', table='tests_representation_testplan', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='testplan',
            trigger=pgtrigger.compiler.Trigger(name='plans_count_decrement_statistics_on_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n            UPDATE core_projectstatistics \n            SET plans_count = plans_count - 1 \n            WHERE project_id = OLD.project_id;\n            RETURN OLD;\n            ', hash='9235a36c5e604eaa95422bf9a54b22aaa2804587', operation='DELETE', pgid='pgtrigger_plans_count_decrement_statistics_on_delete_97d57', table='tests_representation_testplan', when='BEFORE')),
        ),
    ]
