# Generated by Django 4.2.13 on 2024-08-28 19:57

from django.db import migrations, models
import uuid

from mptt.managers import TreeManager
from functools import partial


def rebuild_tree(apps, schema_editor, *, root_node_ordering: bool):
    test_plan_model = apps.get_model('tests_representation', 'TestPlan')
    test_plan_model.tree_manager = TreeManager()
    test_plan_model.tree_manager._base_manager = None
    test_plan_model.tree_manager.model = test_plan_model
    class MPTTMeta:
        def __new__(cls, root_node_ordering: bool):
            cls.root_node_ordering = root_node_ordering
            cls.order_insertion_by = []
            cls.left_attr = "lft"
            cls.right_attr = "rght"
            cls.tree_id_attr = "tree_id"
            cls.level_attr = "level"
            cls.parent_attr = "parent"
            return super().__new__(cls)

    test_plan_model._mptt_meta = MPTTMeta(root_node_ordering=root_node_ordering)
    test_plan_model.tree_manager.rebuild()


# For rolling back this migration you need to set root_node_ordering = False in MPTTBaseModel to True
class Migration(migrations.Migration):
    dependencies = [
        ('tests_representation', '0021_alter_parameter_unique_together_and_more'),
    ]

    operations = [
        migrations.RunPython(migrations.RunPython.noop, partial(rebuild_tree, root_node_ordering=True)),
        migrations.AlterField(
            model_name='testplan',
            name='level',
            field=models.PositiveIntegerField(db_index=True, editable=False),
        ),
        migrations.AlterField(
            model_name='testplan',
            name='lft',
            field=models.PositiveIntegerField(db_index=True, editable=False),
        ),
        migrations.AlterField(
            model_name='testplan',
            name='rght',
            field=models.PositiveIntegerField(db_index=True, editable=False),
        ),

        migrations.AlterField(
            model_name='testplan',
            name='tree_id',
            field=models.PositiveIntegerField(db_index=True, editable=False, default=0),
        ),
        migrations.RemoveField(
            model_name='testplan',
            name='tree_id',
        ),
        migrations.AddField(
            model_name='testplan',
            name='tree_id',
            field=models.UUIDField(blank=True, db_index=True, default=uuid.uuid4),
        ),
        migrations.RunPython(partial(rebuild_tree, root_node_ordering=False), migrations.RunPython.noop),
    ]
