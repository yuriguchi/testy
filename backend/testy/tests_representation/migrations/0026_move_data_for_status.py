# Generated by Django 4.2.13 on 2024-07-14 17:22

from django.db import migrations, transaction
from testy.tests_representation.choices import TestStatuses, ResultStatusType


@transaction.atomic
def set_status_to_foreign_key(apps, schema_editor):
    updating_models = [
        apps.get_model('tests_representation', 'TestResult'),
        apps.get_model('tests_representation', 'HistoricalTestResult'),
        apps.get_model('tests_representation', 'TestStepResult'),
        apps.get_model('tests_representation', 'HistoricalTestStepResult'),
    ]
    status_model = apps.get_model('tests_representation', 'ResultStatus')
    statuses = {
        **{status.name.lower(): status for status in status_model.objects.all()},
        TestStatuses.UNTESTED.label.lower():
            status_model.objects.create(name='Ext-Untested', color='#00FFFF', is_deleted=True),
    }
    for value, label in TestStatuses.choices:
        for model in updating_models:
            model.objects.filter(status=value).update(status_temp=statuses.get(label.lower()))


@transaction.atomic
def return_status_to_choice_field(apps, schema_editor):
    updating_models = [
        apps.get_model('tests_representation', 'TestResult'),
        apps.get_model('tests_representation', 'HistoricalTestResult'),
        apps.get_model('tests_representation', 'TestStepResult'),
        apps.get_model('tests_representation', 'HistoricalTestStepResult'),
    ]
    status_model = apps.get_model('tests_representation', 'ResultStatus')
    choice_statuses = {label.lower(): num for num, label in TestStatuses.choices}

    for status in status_model.objects.all():
        for model in updating_models:
            results = model.objects.filter(status_temp=status)
            if status.name.lower() in choice_statuses and status.type == ResultStatusType.SYSTEM:
                results.update(status=choice_statuses[status.name.lower()])
            else:
                results.update(status=TestStatuses.ROLLBACKED)


class Migration(migrations.Migration):
    dependencies = [
        ('tests_representation', '0025_historicaltestresult_status_temp_and_more'),
    ]

    operations = [
        migrations.RunPython(
            set_status_to_foreign_key,
            return_status_to_choice_field,
        )
    ]
