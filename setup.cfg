[metadata]
long_description = file: README.md
long_description_content_type = text/markdown

[tool:pytest]
DJANGO_SETTINGS_MODULE = root.settings.development
addopts =
    --cov testy
    --cov-fail-under 86
testpaths = tests
pythonpath = testy
filterwarnings =
    ignore::DeprecationWarning
    ignore::pytest.PytestCollectionWarning
[coverage:run]
omit = testy/plugins/*
[flake8]
show-source = True
max-line-length = 120
exclude =
    .git
    __pycache__
    venv
    migrations
    node_modules
    monitoring
    spreadsheet_migrator
    manage.py
    gunicorn.conf.py
    migration_sql.py
    raw_sql.py
    custom_schema_generation.py

# settings for flake8_copyright_validator
lines-to-exclude =
    '# Generated by Django'
    '#!'

copyright-text =
    '# TestY TMS - Test Management System'
    '# Copyright (C) 2024 KNS Group LLC (YADRO)'
    '#'
    '# This program is free software: you can redistribute it and/or modify'
    '# it under the terms of the GNU Affero General Public License as published'
    '# by the Free Software Foundation, either version 3 of the License, or'
    '# (at your option) any later version.'
    '#'
    '# This program is distributed in the hope that it will be useful,'
    '# but WITHOUT ANY WARRANTY; without even the implied warranty of'
    '# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the'
    '# GNU Affero General Public License for more details.'
    '#'
    '# You should have received a copy of the GNU Affero General Public License'
    '# along with this program.  If not, see <http://www.gnu.org/licenses/>.'
    '#'
    '# Also add information on how to contact you by electronic and paper mail.'
    '#'
    '# If your software can interact with users remotely through a computer'
    '# network, you should also make sure that it provides a way for users to'
    '# get its source.  For example, if your program is a web application, its'
    '# interface could display a "Source" link that leads users to an archive'
    '# of the code.  There are many ways you could offer source, and different'
    '# solutions will be better for different programs; see section 13 for the'
    '# specific requirements.'
    '#'
    '# You should also get your employer (if you work as a programmer) or school,'
    '# if any, to sign a "copyright disclaimer" for the program, if necessary.'
    '# For more information on this, and how to apply and follow the GNU AGPL, see'
    '# <http://www.gnu.org/licenses/>.'

per-file-ignores =
    */permissions.py: WPS531
    */serializers.py: WPS226, WPS317
    */admin.py: WPS226, WPS317
    */services/*: WPS317
    */filters.py: WPS226
    */views.py: WPS215, WPS212, WPS203, WPS214, WPS235, WPS226
    */apps.py: WPS433, WPS300, F401
    */models.py: WPS601
    */__init__.py: F401
    ./testy/root/urls.py: WPS360
    ./testy/root/models.py: WPS613, WPS601
    ./testy/utilities/settings.py: WPS232
    ./testy/swagger/*: WPS326, WPS318, WPS237, WPS223, WPS504, WPS220, DAR101, DAR201, WPS231, WPS232, WPS231, WPS221,
    WPS204
    ./testy/tests_representation/selectors/testplan.py: WPS336, WPS462
    ./testy/root/ltree/triggers.py: WPS326
    ./testy/root/settings/*: WPS407, WPS226, WPS400, WPS204, WPS432, E402
    ./testy/plugins/hooks.py: WPS326
    ./testy/triggers.py: WPS462, W291
    ./tests/*: WPS211, S101, WPS326, WPS221, WPS237, N400, WPS318, WPS231, WPS442, WPS441, WPS226, S105, WPS432, WPS317,
    S106, WPS335, WPS111, WPS118, WPS111, B010, WPS213, WPS458, WPS421, WPS114, WPS518, WPS235, WPS430, WPS204, WPS218,
    WPS214, WPS407, WPS301, WPS210, WPS352, WPS336, WPS219, WPS444, WPS232, B020, DAR101, D200, D210, D400, WPS203


# WPS configurations
max-try-body-length = 7
max-methods = 15
max-imports = 20
max-local-variables = 20
max-line-complexity = 15
max-arguments = 8
max-import-from-members = 15
ignore =
# Found upper-case constant in a class
    WPS115
# Found unpythonic getter or setter
    WPS615
# Missing docstring in public module
    D100
# Missing docstring in public class
    D101
# Missing docstring in public method
    D102
# Missing docstring in public function
    D103
# Missing docstring in public package
    D104
# Missing docstring in magic method
    D105
# Missing docstring in public nested class
    D106
# Missing docstring in __init__
    D107
# Found wrong module name
    WPS100
# Found `f` string
    WPS305
# Found class without a base class:
    WPS306
# Found walrus operator
    WPS332
# Found a line that starts with a dot. (Won by most votes)
    WPS348
# Found method without arguments
    WPS605
# Found `%` string formatting
    WPS323
# Found wrong variable name (We use too much words that are forbidden =))
    WPS110
# Found executable mismatch: file is executable but no shebang is present
    WPS453
# Found protected attribute usage:
    WPS437
#Found block variables overlap:
    WPS440
# Found nested class: MPTTMeta
    WPS431
# Found module with too many imports:
    WPS201
# Found too many module members
    WPS202
# Found `__init__.py` module with logic
    WPS412
#  Found vague import that may cause confusion: Q useless for django
    WPS347
# Found underscored number:
    WPS303
# Found wrong function call: hasattr
    WPS421
# Found control variable used after block:
    WPS441
# line break before binary operator
    W503
[isort]
# https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
include_trailing_comma = true
line_length = 120
skip =
    .git
    __pycache__
    venv
    migrations